name: Build and Deploy Laravel App to Azure Web App - recobackend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, intl, pdo_mysql

      - name: Check if composer.json exists in backend
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'backend/composer.json'

      - name: Install Composer Dependencies (Laravel Backend)
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          cd backend
          composer install --no-dev --prefer-dist --no-progress --optimize-autoloader
          php artisan config:clear
          php artisan cache:clear
          php artisan view:cache
          php artisan route:cache

      - name: Ensure correct permissions for Laravel storage & cache
        run: |
          mkdir -p backend/storage backend/bootstrap/cache
          chmod -R 777 backend/storage backend/bootstrap/cache

      - name: Zip Laravel Backend for Deployment
        run: |
          cd backend
          zip -r ../release.zip . -x "node_modules/*" "vendor/*" "tests/*"

      - name: Upload Artifact for Deployment
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download Artifact from Build Job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip Artifact for Deployment
        run: unzip release.zip -d .

      - name: Deploy to Azure Web App (Laravel Backend)
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'recobackend'
          slot-name: 'Production'
          package: backend
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_4AF1FC7F263A421891AE34121937C73C }}

      - name: Post Deployment Commands
        run: |
          cd backend
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache